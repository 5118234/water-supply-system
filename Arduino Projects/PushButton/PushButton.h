/*
 * PushButton.h
 *
 *  Created on: 2015年8月9日
 *      Author: Chris
 *
 *  独立按键检测：可以同时检测多个独立按键，但是只会响应一个被按下的按键。
 *	按键检测可以放在定时事件发生时调用，不用占用太多的CPU时间，即使是按键消抖也是如此。
 *  可以直接获取按键按下或者抬起时的键码，以及通过对应函数调用按键处理函数，来完成指定的任务。
 *  较为灵活，可以指定在按键按下时响应，或者按键抬起时响应。
 *
 *  一次按键的过程：Press→Pressed→Release→Released.
 */

#ifndef PUSHBUTTON_PUSHBUTTON_H_
#define PUSHBUTTON_PUSHBUTTON_H_

////////////////////////////////////////////////////////
// 键码表
// 按键管脚以及对应定义的键码
// 键码用于唯一标志一个按键
////////////////////////////////////////////////////////
typedef struct
{
	int pushButtonPin;
	int keyCode;
}KeyCodeTable;

////////////////////////////////////////////////////////
// 按键处理程序函数
////////////////////////////////////////////////////////
typedef void (*handlerFunc)(int keyCode);

////////////////////////////////////////////////////////
// 初始化函数
////////////////////////////////////////////////////////
extern void pushButtonInitAll(void);

////////////////////////////////////////////////////////
// 按键检测
// 如果按键按下，则返回键码
////////////////////////////////////////////////////////
extern int pushButtonDetect(void);

///////////////////////////////////////////////////////
// 按键按下时触发事件
///////////////////////////////////////////////////////
extern void registerPushButtonPressedEventHandler(handlerFunc handler);

///////////////////////////////////////////////////////
// 按键抬起时触发的事件
///////////////////////////////////////////////////////
extern void registerPushButtonReleasedEventHandler(handlerFunc handler);

#endif /* PUSHBUTTON_PUSHBUTTON_H_ */
